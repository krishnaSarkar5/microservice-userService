
server:
  port: 8081

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/msusers
    username: root
    password: root


  application:
    name: USER-SERVICE

#  profiles:
#    active: dev

  config:
    import: optional:configserver:http://localhost:8085  # fetching config from server



  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      dialect: org.hibernate.dialect.MySQL8Dialect



management:
  health:
    circuitbreakers:
      enabled: true  # this will enable the circuit breaking action
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always  # When to show full health details. Default value:never


resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker:  # name of the circuit breaker defined in controller
        registerHealthIndicator: true
        eventConsumerBufferSize: 10 # to define the buffer size
        failureRateThreshold: 50 # unit in % . if the failure in >= 50 % the circuit will move to open from close state
        minimumNumberOfCalls: 5  # this no of calls are required to calculate the error rate
        automaticTransitionFromOpenToHalfOpenEnabled: true # to do automatic transition from open to half-open.
        waitDurationInOpenState: 6s # waiting time in open state
        permittedNumberOfCallsInHalfOpenState: 3 # no of calls that will be permitted in half open state to decide which will be the next state
        slidingWindowSize: 10 # ?????????????      Configures the size of the sliding window which is used to record the outcome of calls when the CircuitBreaker is closed.
        slidingWindowType: COUNT_BASED # ?????????????   Configures the type of the sliding window which is used to record the outcome of calls when the CircuitBreaker is closed. Sliding window can either be count-based or time-based. If the sliding window is COUNT_BASED, the last slidingWindowSize calls are recorded and aggregated. If the sliding window is TIME_BASED, the calls of the last slidingWindowSize seconds recorded and aggregated.

  retry:
    instances:
      ratingHotelService:
        maxAttempts: 3
        waitDuration: 5s




#eureka:
#  instance:
#    prefer-ip-address: true
#  client:
#    fetch-registry: true
#    register-with-eureka: true
#    service-url:
#      defaultZone: http://localhost:8761/eureka

